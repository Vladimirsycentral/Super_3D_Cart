<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >
    <xacro:include filename="inertial_macros.xacro"/>
    <xacro:arg name="c_length" default="0.335"/>
    <xacro:property name="chassis_length" value="$(arg c_length)"/>
    <xacro:arg name="c_width" default="0.265"/>
    <xacro:property name="chassis_width" value="$(arg c_width)"/>
    <xacro:arg name="c_height" default="0.138"/>
    <xacro:property name="chassis_height" value="$(arg c_height)"/>
    <xacro:property name="chassis_mass" value="1.0"/>
    <xacro:arg name="wheels_d" default="0.033"/>
    <xacro:property name="wheel_radius" value="$(arg wheels_d)"/>
    <xacro:arg name="wheels_width" default="0.026"/>
    <xacro:arg name="fl_sensor" default="-"/>
    <xacro:property name="fl" value="$(arg fl_sensor)"/>
    <xacro:arg name="fr_sensor" default="-"/>
    <xacro:property name="fr" value="$(arg fr_sensor)"/>
    <xacro:arg name="sl_sensor" default="-"/>
    <xacro:property name="sl" value="$(arg sl_sensor)"/>
    <xacro:arg name="sr_sensor" default="-"/>
    <xacro:property name="sr" value="$(arg sr_sensor)"/>
    <xacro:arg name="rl_sensor" default="-"/>
    <xacro:property name="rl" value="$(arg rl_sensor)"/>
    <xacro:arg name="rr_sensor" default="-"/>
    <xacro:property name="rr" value="$(arg rr_sensor)"/>
    <xacro:property name="wheel_thickness" value="$(arg wheels_width)"/>
    <xacro:property name="wheel_mass" value="0.105"/>
    <xacro:property name="wheel_offset_x" value="0.226"/>
    <xacro:property name="wheel_offset_y" value="${chassis_width / 2}"/>
    <xacro:property name="wheel_offset_z" value="0.01"/>
    <xacro:property name="caster_wheel_radius" value="0.01"/>
    <xacro:property name="caster_wheel_mass" value="0.01"/>
    <xacro:property name="caster_wheel_offset_x" value="0.075"/>
    <xacro:property name="caster_wheel_offset_z" value="${wheel_offset_z - wheel_radius + caster_wheel_radius}"/>


    <xacro:arg name="front_camera" default="False"/>
    <xacro:arg name="rear_camera" default="False"/>

    <xacro:macro name="lidar" params="sensor_x sensor_y sensor_z sensor_angle_x sensor_angle_y frame_name joint_name sensor_name sensor_controller_name min_angle max_angle">
    <joint name="${joint_name}" type="fixed">
        <parent link="chassis"/>
        <child link="${frame_name}"/>
        <origin xyz="${sensor_x} ${sensor_y} ${sensor_z}" rpy="${sensor_angle_x} ${sensor_angle_y} 0"/>
    </joint>

    <link name="${frame_name}">
        <visual>
            <origin xyz="0 0 0"/>
            <geometry>
                <cylinder radius="0.01" length="0.1"/>
            </geometry>
            <material name="black"/>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.01" length="0.1"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="0.04" radius="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="${frame_name}">
        <material>Gazebo/Black</material>

        <sensor name="${sensor_name}" type="ray">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>false</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>45</samples>
                        <min_angle>${min_angle}</min_angle>
                        <max_angle>${max_angle}</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.3</min>
                    <max>12</max>
                </range>
            </ray>
            <plugin name="${sensor_controller_name}" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <argument>~/out:=${sensor_controller_name}/lidar</argument>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>${frame_name}</frame_name>
            </plugin>
        </sensor>
    </gazebo>
    </xacro:macro>

    <xacro:macro name="camera" params="camera_joint link_name camera_optical_joint camera_link_optical sensor_name camera_controller angle x">
        <joint name="${camera_joint}" type="fixed">
            <parent link="chassis"/>
            <child link="${link_name}"/>
            <origin xyz="${x} 0 0.181" rpy="0 0.18 ${angle}"/>
        </joint>

        <link name="${link_name}">
            <visual>
                <geometry>
                    <box size="0.010 0.03 0.03"/>
                </geometry>
                <material name="black"/>
            </visual>
            <visual>
                <origin xyz="0 0 -0.05"/>
                <geometry>
                    <cylinder radius="0.002" length="0.1"/>
                </geometry>
                <material name="black"/>
            </visual>
        </link>
        <joint name="${camera_optical_joint}" type="fixed">
            <parent link="${link_name}"/>
            <child link="${camera_optical_joint}"/>
            <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
        </joint>

        <link name="${camera_optical_joint}"></link>
        <gazebo reference="${link_name}">
            <material>Gazebo/Black</material>

            <sensor name="${sensor_name}" type="camera">
                <pose> 0 0 0 0 0 0 </pose>
                <visualize>false</visualize>
                <update_rate>10</update_rate>
                <camera>
                    <horizontal_fov>1.089</horizontal_fov>
                    <image>
                        <format>R8G8B8</format>
                        <width>640</width>
                        <height>480</height>
                    </image>
                    <clip>
                        <near>0.05</near>
                        <far>8.0</far>
                    </clip>
                </camera>
                <plugin name="${camera_controller}" filename="libgazebo_ros_camera.so">
                    <frame_name>${camera_link_optical}</frame_name>
                </plugin>
            </sensor>
        </gazebo>
    </xacro:macro>

    <xacro:if value="${fl == 'lidar_sensor'}">
        <xacro:lidar sensor_y="${-chassis_width/4}" sensor_x="${0}" sensor_z="${chassis_height/2}" sensor_angle_x="0" sensor_angle_y="0" frame_name="fl_frame" joint_name="fl_joint" sensor_name="fl_sensor" sensor_controller_name="lf" min_angle="${pi/2}" max_angle="${3*pi/2}"/>
    </xacro:if>
    <xacro:if value="${fr == 'lidar_sensor'}">
        <xacro:lidar sensor_y="${chassis_width/4}" sensor_x="${0}" sensor_z="${chassis_height/2}" sensor_angle_x="0" sensor_angle_y="0" frame_name="fr_frame" joint_name="fr_joint" sensor_name="fr_sensor" sensor_controller_name="rf" min_angle="${pi/2}" max_angle="${3*pi/2}"/>
    </xacro:if>
    <xacro:if value="${sl == 'lidar_sensor'}">
        <xacro:lidar sensor_y="${-chassis_width/2}" sensor_x="${chassis_length/2}" sensor_z="${chassis_height/2}" sensor_angle_x="0" sensor_angle_y="0" frame_name="sl_frame" joint_name="sl_joint" sensor_name="sl_sensor" sensor_controller_name="ls" min_angle="${pi}" max_angle="${2*pi}"/>
    </xacro:if>
    <xacro:if value="${sr == 'lidar_sensor'}">
        <xacro:lidar sensor_y="${chassis_width/2}" sensor_x="${chassis_length/2}" sensor_z="${chassis_height/2}" sensor_angle_x="0" sensor_angle_y="0" frame_name="sr_frame" joint_name="sr_joint" sensor_name="sr_sensor" sensor_controller_name="rs" min_angle="${0}" max_angle="${pi}"/>
    </xacro:if>
    <xacro:if value="${rl == 'lidar_sensor'}">
        <xacro:lidar sensor_y="${-chassis_width/4}" sensor_x="${chassis_length}" sensor_z="${chassis_height/2}" sensor_angle_x="0" sensor_angle_y="0" frame_name="rl_frame" joint_name="rl_joint" sensor_name="rl_sensor" sensor_controller_name="rl" min_angle="${-pi/2}" max_angle="${pi/2}"/>
    </xacro:if>
    <xacro:if value="${rr == 'lidar_sensor'}">
        <xacro:lidar sensor_y="${chassis_width/4}" sensor_x="${chassis_length}" sensor_z="${chassis_height/2}" sensor_angle_x="0" sensor_angle_y="0" frame_name="rr_frame" joint_name="rr_joint" sensor_name="rr_sensor" sensor_controller_name="rr" min_angle="${-pi/2}" max_angle="${pi/2}"/>
    </xacro:if>
    <xacro:if value="$(arg front_camera)">
        <xacro:camera camera_joint="camer_joint_1" link_name="camera_link_name_1" camera_optical_joint="camera_optical_joint_1" camera_link_optical="camera_link_optical_1" sensor_name="rear_camera" camera_controller="camera_controller_1" angle="${pi}" x="${0}" />
    </xacro:if>
    <xacro:if value="$(arg rear_camera)">
        <xacro:camera camera_joint="camer_joint_2" link_name="camera_link_name_2" camera_optical_joint="camera_optical_joint_2" camera_link_optical="camera_link_optical_2" sensor_name="front_camera" camera_controller="camera_controller_2" angle="0" x="${chassis_length}" />
    </xacro:if>

    <material name="white">
        <color rgba="1 1 1 1" />
    </material>

    <material name="orange">
        <color rgba="1 0.3 0.1 1"/>
    </material>

    <material name="blue">
        <color rgba="0.2 0.2 1 1"/>
    </material>

    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>

    <material name="red">
        <color rgba="1 0 0 1"/>
    </material>

    <!-- BASE LINK -->

    <link name="base_link">
        <origin xyz="0 0 20" rpy="0 0 0"/>
    </link>

    <!-- BASE_FOOTPRINT LINK -->

    <joint name="base_footprint_joint" type="fixed">
        <parent link="base_link"/>
        <child link="base_footprint"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>

    <link name="base_footprint">
    </link>


    <!-- CHASSIS LINK -->

    <joint name="chassis_joint" type="fixed">
        <parent link="base_link"/>
        <child link="chassis"/>
        <origin xyz="${-wheel_offset_x} 0 ${-wheel_offset_z}"/>
    </joint>

    <link name="chassis">
        <visual>
            <origin xyz="${chassis_length/2} 0 ${chassis_height/2}"/>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
            <material name="orange"/>
        </visual>
        <collision>
            <origin xyz="${chassis_length/2} 0 ${chassis_height/2}"/>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
        </collision>
        <xacro:inertial_box mass="0.5" x="${chassis_length}" y="${chassis_width}" z="${chassis_height}">
            <origin xyz="${chassis_length/2} 0 ${chassis_height/2}" rpy="0 0 0"/>
        </xacro:inertial_box>
    </link>

    <gazebo reference="chassis">
        <material>Gazebo/Orange</material>
    </gazebo>

    <!-- LEFT WHEEL LINK -->

    <joint name="left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel"/>
        <origin xyz="${chassis_length - 0.33} ${wheel_offset_y} 0" rpy="-${pi/2} 0 0" />
        <axis xyz="0 0 1"/>
    </joint>

    <link name="left_wheel">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <joint name="left_wheel_joint_b" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel_b"/>
        <origin xyz="-0.14 ${wheel_offset_y} 0" rpy="-${pi/2} 0 0" />
        <axis xyz="0 0 1"/>
    </joint>

    <link name="left_wheel_b">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="left_wheel">
        <material>Gazebo/Blue</material>
    </gazebo>

    <gazebo reference="left_wheel_b">
        <material>Gazebo/Blue</material>
    </gazebo>


    <!-- RIGHT WHEEL LINK -->

    <joint name="right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel"/>
        <origin xyz="${chassis_length - 0.33} ${-wheel_offset_y} 0" rpy="${pi/2} 0 0" />
        <axis xyz="0 0 -1"/>
    </joint>

    <link name="right_wheel">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <joint name="right_wheel_joint_b" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel_b"/>
        <origin xyz="-0.14 ${-wheel_offset_y} 0" rpy="${pi/2} 0 0" />
        <axis xyz="0 0 -1"/>
    </joint>

    <link name="right_wheel_b">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
            </geometry>
            <material name="blue"/>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${wheel_radius}"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" length="${wheel_thickness}" radius="${wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="right_wheel">
        <material>Gazebo/Blue</material>
    </gazebo>
    <gazebo reference="right_wheel_b">
        <material>Gazebo/Blue</material>
    </gazebo>


</robot>